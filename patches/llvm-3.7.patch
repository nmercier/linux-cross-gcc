diff -Naur clang-3.7.src/CMakeLists.txt clang-3.7/CMakeLists.txt
--- clang-3.7.src/CMakeLists.txt	2015-11-16 19:18:25.000000000 +0100
+++ clang-3.7/CMakeLists.txt	2016-06-02 11:15:48.055900000 +0200
@@ -156,7 +156,7 @@
 
 # They are used as destination of target generators.
 set(LLVM_RUNTIME_OUTPUT_INTDIR ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/bin)
-set(LLVM_LIBRARY_OUTPUT_INTDIR ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/lib${LLVM_LIBDIR_SUFFIX})
+set(LLVM_LIBRARY_OUTPUT_INTDIR ${CMAKE_CURRENT_BINARY_DIR}/Release/lib${LLVM_LIBDIR_SUFFIX})
 if(WIN32 OR CYGWIN)
   # DLL platform -- put DLLs into bin.
   set(LLVM_SHLIB_OUTPUT_INTDIR ${LLVM_RUNTIME_OUTPUT_INTDIR})
diff -Naur clang-3.7.src/lib/Analysis/ConstantFolding.cpp clang-3.7/lib/Analysis/ConstantFolding.cpp
--- clang-3.7.src/lib/Analysis/ConstantFolding.cpp	2015-07-08 05:55:47.000000000 +0200
+++ clang-3.7/lib/Analysis/ConstantFolding.cpp	2016-06-02 11:15:48.010851400 +0200
@@ -38,6 +38,7 @@
 #include <cmath>
 
 #ifdef HAVE_FENV_H
+#define _GLIBCXX_HAVE_FENV_H 1
 #include <fenv.h>
 #endif
 
diff -Naur clang-3.7.src/lib/Support/Windows/Host.inc clang-3.7/lib/Support/Windows/Host.inc
--- clang-3.7.src/lib/Support/Windows/Host.inc	2014-09-24 06:45:14.000000000 +0200
+++ clang-3.7/lib/Support/Windows/Host.inc	2016-06-02 11:15:48.051914100 +0200
@@ -18,5 +18,5 @@
 using namespace llvm;
 
 std::string sys::getDefaultTargetTriple() {
-  return Triple::normalize(LLVM_DEFAULT_TARGET_TRIPLE);
+  return LLVM_DEFAULT_TARGET_TRIPLE;
 }
diff -Naur clang-3.7.src/tools/clang/include/clang/Driver/Driver.h clang-3.7/tools/clang/include/clang/Driver/Driver.h
--- clang-3.7.src/tools/clang/include/clang/Driver/Driver.h	2015-07-10 21:47:55.000000000 +0200
+++ clang-3.7/tools/clang/include/clang/Driver/Driver.h	2016-06-02 11:15:48.015852000 +0200
@@ -104,6 +104,9 @@
   /// Dynamic loader prefix, if present
   std::string DyldPrefix;
 
+  /// Default GCC install path
+  std::string DefaultGCCInstallPath;
+
   /// If the standard library is used
   bool UseStdLib;
 
@@ -223,6 +226,11 @@
   const std::string &getTitle() { return DriverTitle; }
   void setTitle(std::string Value) { DriverTitle = Value; }
 
+  /// \brief Get the default path of GCC install prefix
+  const char *getDefaultGCCInstallPath() const {
+    return DefaultGCCInstallPath.c_str();
+  }
+
   /// \brief Get the path to the main clang executable.
   const char *getClangProgramPath() const {
     return ClangExecutable.c_str();
diff -Naur clang-3.7.src/tools/clang/lib/Driver/Driver.cpp clang-3.7/tools/clang/lib/Driver/Driver.cpp
--- clang-3.7.src/tools/clang/lib/Driver/Driver.cpp	2015-07-14 01:27:56.000000000 +0200
+++ clang-3.7/tools/clang/lib/Driver/Driver.cpp	2016-06-02 11:17:04.503279900 +0200
@@ -25,6 +25,7 @@
 #include "llvm/ADT/StringExtras.h"
 #include "llvm/ADT/StringSet.h"
 #include "llvm/ADT/StringSwitch.h"
+#include "llvm/Config/config.h" // for LLVM_PREFIX
 #include "llvm/Option/Arg.h"
 #include "llvm/Option/ArgList.h"
 #include "llvm/Option/OptSpecifier.h"
@@ -45,11 +46,20 @@
 using namespace clang;
 using namespace llvm::opt;
 
+static size_t getPrefixFolderOf(StringRef prefix, StringRef path) {
+  size_t Common;
+  for (Common = 0; Common < prefix.size() && Common < path.size()
+                && (prefix[Common] == path[Common] || (llvm::sys::path::is_separator(prefix[Common])
+                                                    && llvm::sys::path::is_separator(path[Common]))); ++Common) { }
+  return Common;
+}
+
 Driver::Driver(StringRef ClangExecutable, StringRef DefaultTargetTriple,
                DiagnosticsEngine &Diags)
     : Opts(createDriverOptTable()), Diags(Diags), Mode(GCCMode),
       SaveTemps(SaveTempsNone), ClangExecutable(ClangExecutable),
-      SysRoot(DEFAULT_SYSROOT), UseStdLib(true),
+      SysRoot(DEFAULT_SYSROOT),
+      DefaultGCCInstallPath(GCC_INSTALL_PREFIX), UseStdLib(true),
       DefaultTargetTriple(DefaultTargetTriple),
       DriverTitle("clang LLVM compiler"), CCPrintOptionsFilename(nullptr),
       CCPrintHeadersFilename(nullptr), CCLogDiagnosticsFilename(nullptr),
@@ -60,6 +70,47 @@
   Name = llvm::sys::path::filename(ClangExecutable);
   Dir = llvm::sys::path::parent_path(ClangExecutable);
 
+  StringRef DefaultSysroot = DEFAULT_SYSROOT;
+  StringRef DefaultGCCInstallPathRef = GCC_INSTALL_PREFIX;
+  if (!DefaultSysroot.empty() || !DefaultGCCInstallPathRef.empty()) {
+    // Try to relocate the sysroot/gcc install path when prefix of
+    // ClangExecutable not equal to LLVM_PREFIX.
+    StringRef LLVMPrefix = LLVM_PREFIX;
+    size_t CommonPrefixLength = getPrefixFolderOf(LLVMPrefix, ClangExecutable);
+    if (CommonPrefixLength != LLVMPrefix.size()) {
+      StringRef Sep = "/";
+      {
+        size_t CommonSysrootLength = getPrefixFolderOf(LLVMPrefix, DefaultSysroot);
+        StringRef RelativePath = DefaultSysroot.substr(CommonSysrootLength);
+        StringRef SkipPath = LLVMPrefix.substr(CommonSysrootLength + (llvm::sys::path::is_separator(LLVMPrefix[CommonSysrootLength]) ? 1 : 0));
+        StringRef RelocatedBase = llvm::sys::path::parent_path(Dir);
+        for (llvm::sys::path::const_iterator it = llvm::sys::path::begin(SkipPath), end = llvm::sys::path::end(SkipPath);
+             it != end;
+             ++it) {
+          RelocatedBase = llvm::sys::path::parent_path(RelocatedBase);
+        }
+        if (llvm::sys::fs::is_directory(RelocatedBase + Sep + RelativePath)) {
+          SysRoot =  (RelocatedBase + Sep + RelativePath).str();
+        }
+      }
+
+      {
+        size_t CommonGCCInstallLength = getPrefixFolderOf(LLVMPrefix, DefaultGCCInstallPath);
+        StringRef RelativePath = DefaultGCCInstallPath.substr(CommonGCCInstallLength);
+        StringRef SkipPath = LLVMPrefix.substr(CommonGCCInstallLength + (llvm::sys::path::is_separator(LLVMPrefix[CommonGCCInstallLength]) ? 1 : 0));
+        StringRef RelocatedBase = llvm::sys::path::parent_path(Dir);
+        for (llvm::sys::path::const_iterator it = llvm::sys::path::begin(SkipPath);
+             it != llvm::sys::path::end(SkipPath);
+             ++it) {
+          RelocatedBase = llvm::sys::path::parent_path(RelocatedBase);
+        }
+        if (llvm::sys::fs::is_directory(RelocatedBase + Sep + RelativePath)) {
+          DefaultGCCInstallPath =  (RelocatedBase + Sep + RelativePath).str();
+        }
+      }
+    }
+  }
+
   // Compute the path to the resource directory.
   StringRef ClangResourceDir(CLANG_RESOURCE_DIR);
   SmallString<128> P(Dir);
diff -Naur clang-3.7.src/tools/clang/lib/Driver/ToolChain.cpp clang-3.7/tools/clang/lib/Driver/ToolChain.cpp
--- clang-3.7.src/tools/clang/lib/Driver/ToolChain.cpp	2015-07-30 11:57:20.000000000 +0200
+++ clang-3.7/tools/clang/lib/Driver/ToolChain.cpp	2016-06-02 11:15:48.026853000 +0200
@@ -17,6 +17,7 @@
 #include "clang/Driver/ToolChain.h"
 #include "llvm/ADT/SmallString.h"
 #include "llvm/ADT/StringSwitch.h"
+#include "llvm/Config/config.h" // for LLVM_PREFIX
 #include "llvm/Option/Arg.h"
 #include "llvm/Option/ArgList.h"
 #include "llvm/Option/Option.h"
diff -Naur clang-3.7.src/tools/clang/lib/Driver/ToolChains.cpp clang-3.7/tools/clang/lib/Driver/ToolChains.cpp
--- clang-3.7.src/tools/clang/lib/Driver/ToolChains.cpp	2015-07-14 01:27:56.000000000 +0200
+++ clang-3.7/tools/clang/lib/Driver/ToolChains.cpp	2016-06-02 11:15:48.033853000 +0200
@@ -11,6 +11,7 @@
 #include "clang/Basic/ObjCRuntime.h"
 #include "clang/Basic/Version.h"
 #include "clang/Config/config.h" // for GCC_INSTALL_PREFIX
+#include "llvm/Config/config.h" // for LLVM_PREFIX
 #include "clang/Driver/Compilation.h"
 #include "clang/Driver/Driver.h"
 #include "clang/Driver/DriverDiagnostic.h"
@@ -1153,11 +1154,11 @@
   return false;
 }
 
-static llvm::StringRef getGCCToolchainDir(const ArgList &Args) {
+static StringRef getGCCToolchainDir(const ArgList &Args, const Driver &D) {
   const Arg *A = Args.getLastArg(options::OPT_gcc_toolchain);
   if (A)
     return A->getValue();
-  return GCC_INSTALL_PREFIX;
+  return D.getDefaultGCCInstallPath();
 }
 
 /// \brief Initialize a GCCInstallationDetector from the driver.
@@ -1187,7 +1188,7 @@
   SmallVector<std::string, 8> Prefixes(D.PrefixDirs.begin(),
                                        D.PrefixDirs.end());
 
-  StringRef GCCToolchainDir = getGCCToolchainDir(Args);
+  StringRef GCCToolchainDir = getGCCToolchainDir(Args, D);
   if (GCCToolchainDir != "") {
     if (GCCToolchainDir.back() == '/')
       GCCToolchainDir = GCCToolchainDir.drop_back(); // remove the /
@@ -2076,10 +2077,11 @@
 /// Hexagon Toolchain
 
 std::string Hexagon_TC::GetGnuDir(const std::string &InstalledDir,
-                                  const ArgList &Args) {
+                                  const ArgList &Args,
+                                  const Driver &D) {
 
   // Locate the rest of the toolchain ...
-  std::string GccToolchain = getGCCToolchainDir(Args);
+  std::string GccToolchain = getGCCToolchainDir(Args, D);
 
   if (!GccToolchain.empty())
     return GccToolchain;
@@ -2118,7 +2120,8 @@
 static void GetHexagonLibraryPaths(const ArgList &Args, const std::string &Ver,
                                    const std::string &MarchString,
                                    const std::string &InstalledDir,
-                                   ToolChain::path_list *LibPaths) {
+                                   ToolChain::path_list *LibPaths,
+                                   const Driver &D) {
   bool buildingLib = Args.hasArg(options::OPT_shared);
 
   //----------------------------------------------------------------------------
@@ -2134,7 +2137,7 @@
   const std::string MarchSuffix = "/" + MarchString;
   const std::string G0Suffix = "/G0";
   const std::string MarchG0Suffix = MarchSuffix + G0Suffix;
-  const std::string RootDir = Hexagon_TC::GetGnuDir(InstalledDir, Args) + "/";
+  const std::string RootDir = Hexagon_TC::GetGnuDir(InstalledDir, Args, D) + "/";
 
   // lib/gcc/hexagon/...
   std::string LibGCCHexagonDir = RootDir + "lib/gcc/hexagon/";
@@ -2162,7 +2165,7 @@
                        const ArgList &Args)
     : Linux(D, Triple, Args) {
   const std::string InstalledDir(getDriver().getInstalledDir());
-  const std::string GnuDir = Hexagon_TC::GetGnuDir(InstalledDir, Args);
+  const std::string GnuDir = Hexagon_TC::GetGnuDir(InstalledDir, Args, D);
 
   // Note: Generic_GCC::Generic_GCC adds InstalledDir and getDriver().Dir to
   // program paths
@@ -2190,7 +2193,7 @@
   LibPaths->clear();
 
   GetHexagonLibraryPaths(Args, GetGCCLibAndIncVersion(), GetTargetCPU(Args),
-                         InstalledDir, LibPaths);
+                         InstalledDir, LibPaths, D);
 }
 
 Hexagon_TC::~Hexagon_TC() {}
@@ -2212,7 +2215,7 @@
     return;
 
   std::string Ver(GetGCCLibAndIncVersion());
-  std::string GnuDir = Hexagon_TC::GetGnuDir(D.InstalledDir, DriverArgs);
+  std::string GnuDir = Hexagon_TC::GetGnuDir(D.InstalledDir, DriverArgs, D);
   std::string HexagonDir(GnuDir + "/lib/gcc/hexagon/" + Ver);
   addExternCSystemInclude(DriverArgs, CC1Args, HexagonDir + "/include");
   addExternCSystemInclude(DriverArgs, CC1Args, HexagonDir + "/include-fixed");
@@ -2229,7 +2232,7 @@
   const Driver &D = getDriver();
   std::string Ver(GetGCCLibAndIncVersion());
   SmallString<128> IncludeDir(
-      Hexagon_TC::GetGnuDir(D.InstalledDir, DriverArgs));
+      Hexagon_TC::GetGnuDir(D.InstalledDir, DriverArgs, D));
 
   llvm::sys::path::append(IncludeDir, "hexagon/include/c++/");
   llvm::sys::path::append(IncludeDir, Ver);
diff -Naur clang-3.7.src/tools/clang/lib/Driver/ToolChains.h clang-3.7/tools/clang/lib/Driver/ToolChains.h
--- clang-3.7.src/tools/clang/lib/Driver/ToolChains.h	2015-07-27 22:42:22.000000000 +0200
+++ clang-3.7/tools/clang/lib/Driver/ToolChains.h	2016-06-02 11:15:48.039853500 +0200
@@ -735,7 +735,8 @@
   StringRef GetGCCLibAndIncVersion() const { return GCCLibAndIncVersion.Text; }
 
   static std::string GetGnuDir(const std::string &InstalledDir,
-                               const llvm::opt::ArgList &Args);
+                               const llvm::opt::ArgList &Args,
+                               const Driver &D);
 
   static StringRef GetTargetCPU(const llvm::opt::ArgList &Args);
 
diff -Naur clang-3.7.src/tools/clang/lib/Driver/Tools.cpp clang-3.7/tools/clang/lib/Driver/Tools.cpp
--- clang-3.7.src/tools/clang/lib/Driver/Tools.cpp	2015-11-06 12:38:46.000000000 +0100
+++ clang-3.7/tools/clang/lib/Driver/Tools.cpp	2016-06-02 11:15:48.046854000 +0200
@@ -5798,7 +5798,7 @@
   const std::string G0Suffix = "/G0";
   const std::string MarchG0Suffix = MarchSuffix + G0Suffix;
   const std::string RootDir =
-      toolchains::Hexagon_TC::GetGnuDir(D.InstalledDir, Args) + "/";
+      toolchains::Hexagon_TC::GetGnuDir(D.InstalledDir, Args, D) + "/";
   const std::string StartFilesDir =
       RootDir + "hexagon/lib" + (useG0 ? MarchG0Suffix : MarchSuffix);
 

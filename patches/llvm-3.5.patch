diff -Naur clang-3.5.src/lib/Analysis/ConstantFolding.cpp clang-3.5/lib/Analysis/ConstantFolding.cpp
--- clang-3.5.src/lib/Analysis/ConstantFolding.cpp	2014-07-15 00:39:26.000000000 +0200
+++ clang-3.5/lib/Analysis/ConstantFolding.cpp	2016-05-31 19:21:44.869225300 +0200
@@ -38,6 +38,7 @@
 #include <cmath>
 
 #ifdef HAVE_FENV_H
+#define _GLIBCXX_HAVE_FENV_H 1
 #include <fenv.h>
 #endif
 
diff -Naur clang-3.5.src/lib/Support/Windows/Host.inc clang-3.5/lib/Support/Windows/Host.inc
--- clang-3.5.src/lib/Support/Windows/Host.inc	2014-03-29 02:08:53.000000000 +0100
+++ clang-3.5/lib/Support/Windows/Host.inc	2016-05-31 19:21:44.896210700 +0200
@@ -18,5 +18,5 @@
 using namespace llvm;
 
 std::string sys::getDefaultTargetTriple() {
-  return Triple::normalize(LLVM_DEFAULT_TARGET_TRIPLE);
+  return LLVM_DEFAULT_TARGET_TRIPLE;
 }
diff -Naur clang-3.5.src/tools/clang/include/clang/Driver/Driver.h clang-3.5/tools/clang/include/clang/Driver/Driver.h
--- clang-3.5.src/tools/clang/include/clang/Driver/Driver.h	2014-05-16 00:26:36.000000000 +0200
+++ clang-3.5/tools/clang/include/clang/Driver/Driver.h	2016-05-31 19:21:44.875225900 +0200
@@ -97,6 +97,9 @@
   /// Dynamic loader prefix, if present
   std::string DyldPrefix;
 
+  /// Default GCC install path
+  std::string DefaultGCCInstallPath;
+
   /// If the standard library is used
   bool UseStdLib;
 
@@ -213,6 +216,11 @@
   const std::string &getTitle() { return DriverTitle; }
   void setTitle(std::string Value) { DriverTitle = Value; }
 
+  /// \brief Get the default path of GCC install prefix
+  const char *getDefaultGCCInstallPath() const {
+    return DefaultGCCInstallPath.c_str();
+  }
+
   /// \brief Get the path to the main clang executable.
   const char *getClangProgramPath() const {
     return ClangExecutable.c_str();
diff -Naur clang-3.5.src/tools/clang/lib/Driver/Driver.cpp clang-3.5/tools/clang/lib/Driver/Driver.cpp
--- clang-3.5.src/tools/clang/lib/Driver/Driver.cpp	2014-07-11 16:28:45.000000000 +0200
+++ clang-3.5/tools/clang/lib/Driver/Driver.cpp	2016-05-31 19:28:43.047116500 +0200
@@ -24,6 +24,7 @@
 #include "llvm/ADT/StringExtras.h"
 #include "llvm/ADT/StringSet.h"
 #include "llvm/ADT/StringSwitch.h"
+#include "llvm/Config/config.h" // for LLVM_PREFIX
 #include "llvm/Option/Arg.h"
 #include "llvm/Option/ArgList.h"
 #include "llvm/Option/OptSpecifier.h"
@@ -44,11 +45,20 @@
 using namespace clang;
 using namespace llvm::opt;
 
+static size_t getPrefixFolderOf(StringRef prefix, StringRef path) {
+  size_t Common;
+  for (Common = 0; Common < prefix.size() && Common < path.size()
+                && (prefix[Common] == path[Common] || (llvm::sys::path::is_separator(prefix[Common])
+                                                    && llvm::sys::path::is_separator(path[Common]))); ++Common) { }
+  return Common;
+}
+
 Driver::Driver(StringRef ClangExecutable,
                StringRef DefaultTargetTriple,
                DiagnosticsEngine &Diags)
   : Opts(createDriverOptTable()), Diags(Diags), Mode(GCCMode),
     ClangExecutable(ClangExecutable), SysRoot(DEFAULT_SYSROOT),
+    DefaultGCCInstallPath(GCC_INSTALL_PREFIX),
     UseStdLib(true), DefaultTargetTriple(DefaultTargetTriple),
     DefaultImageName("a.out"),
     DriverTitle("clang LLVM compiler"),
@@ -61,7 +71,47 @@
 
   Name = llvm::sys::path::stem(ClangExecutable);
   Dir  = llvm::sys::path::parent_path(ClangExecutable);
+ 
+  StringRef DefaultSysroot = DEFAULT_SYSROOT;
+  StringRef DefaultGCCInstallPathRef = GCC_INSTALL_PREFIX;
+  if (!DefaultSysroot.empty() || !DefaultGCCInstallPathRef.empty()) {
+    // Try to relocate the sysroot/gcc install path when prefix of
+    // ClangExecutable not equal to LLVM_PREFIX.
+    StringRef LLVMPrefix = LLVM_PREFIX;
+    size_t CommonPrefixLength = getPrefixFolderOf(LLVMPrefix, ClangExecutable);
+    if (CommonPrefixLength != LLVMPrefix.size()) {
+      StringRef Sep = "/";
+      {
+        size_t CommonSysrootLength = getPrefixFolderOf(LLVMPrefix, DefaultSysroot);
+        StringRef RelativePath = DefaultSysroot.substr(CommonSysrootLength);
+        StringRef SkipPath = LLVMPrefix.substr(CommonSysrootLength + (llvm::sys::path::is_separator(LLVMPrefix[CommonSysrootLength]) ? 1 : 0));
+        StringRef RelocatedBase = llvm::sys::path::parent_path(Dir);
+        for (llvm::sys::path::const_iterator it = llvm::sys::path::begin(SkipPath), end = llvm::sys::path::end(SkipPath);
+             it != end;
+             ++it) {
+          RelocatedBase = llvm::sys::path::parent_path(RelocatedBase);
+        }
+        if (llvm::sys::fs::is_directory(RelocatedBase + Sep + RelativePath)) {
+          SysRoot =  (RelocatedBase + Sep + RelativePath).str();
+        }
+      }
 
+      {
+        size_t CommonGCCInstallLength = getPrefixFolderOf(LLVMPrefix, DefaultGCCInstallPath);
+        StringRef RelativePath = DefaultGCCInstallPath.substr(CommonGCCInstallLength);
+        StringRef SkipPath = LLVMPrefix.substr(CommonGCCInstallLength + (llvm::sys::path::is_separator(LLVMPrefix[CommonGCCInstallLength]) ? 1 : 0));
+        StringRef RelocatedBase = llvm::sys::path::parent_path(Dir);
+        for (llvm::sys::path::const_iterator it = llvm::sys::path::begin(SkipPath);
+             it != llvm::sys::path::end(SkipPath);
+             ++it) {
+          RelocatedBase = llvm::sys::path::parent_path(RelocatedBase);
+        }
+        if (llvm::sys::fs::is_directory(RelocatedBase + Sep + RelativePath)) {
+          DefaultGCCInstallPath =  (RelocatedBase + Sep + RelativePath).str();
+        }
+      }
+    }
+  }
   // Compute the path to the resource directory.
   StringRef ClangResourceDir(CLANG_RESOURCE_DIR);
   SmallString<128> P(Dir);
diff -Naur clang-3.5.src/tools/clang/lib/Driver/ToolChain.cpp clang-3.5/tools/clang/lib/Driver/ToolChain.cpp
--- clang-3.5.src/tools/clang/lib/Driver/ToolChain.cpp	2014-06-26 16:23:45.000000000 +0200
+++ clang-3.5/tools/clang/lib/Driver/ToolChain.cpp	2016-05-31 19:21:44.886226000 +0200
@@ -17,6 +17,7 @@
 #include "clang/Driver/ToolChain.h"
 #include "llvm/ADT/SmallString.h"
 #include "llvm/ADT/StringSwitch.h"
+#include "llvm/Config/config.h" // for LLVM_PREFIX
 #include "llvm/Option/Arg.h"
 #include "llvm/Option/ArgList.h"
 #include "llvm/Option/Option.h"
diff -Naur clang-3.5.src/tools/clang/lib/Driver/ToolChains.cpp clang-3.5/tools/clang/lib/Driver/ToolChains.cpp
--- clang-3.5.src/tools/clang/lib/Driver/ToolChains.cpp	2014-08-27 22:07:31.000000000 +0200
+++ clang-3.5/tools/clang/lib/Driver/ToolChains.cpp	2016-05-31 19:21:44.892226300 +0200
@@ -11,6 +11,7 @@
 #include "clang/Basic/ObjCRuntime.h"
 #include "clang/Basic/Version.h"
 #include "clang/Config/config.h" // for GCC_INSTALL_PREFIX
+#include "llvm/Config/config.h" // for LLVM_PREFIX
 #include "clang/Driver/Compilation.h"
 #include "clang/Driver/Driver.h"
 #include "clang/Driver/DriverDiagnostic.h"
@@ -1197,11 +1198,11 @@
   return false;
 }
 
-static llvm::StringRef getGCCToolchainDir(const ArgList &Args) {
+static StringRef getGCCToolchainDir(const ArgList &Args, const Driver &D) {
   const Arg *A = Args.getLastArg(options::OPT_gcc_toolchain);
   if (A)
     return A->getValue();
-  return GCC_INSTALL_PREFIX;
+  return D.getDefaultGCCInstallPath();
 }
 
 /// \brief Initialize a GCCInstallationDetector from the driver.
@@ -1232,7 +1233,7 @@
   SmallVector<std::string, 8> Prefixes(D.PrefixDirs.begin(),
                                        D.PrefixDirs.end());
 
-  StringRef GCCToolchainDir = getGCCToolchainDir(Args);
+  StringRef GCCToolchainDir = getGCCToolchainDir(Args, D);
   if (GCCToolchainDir != "") {
     if (GCCToolchainDir.back() == '/')
       GCCToolchainDir = GCCToolchainDir.drop_back(); // remove the /

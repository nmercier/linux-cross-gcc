--- clang-3.5.orig/tools/clang/lib/Driver/ToolChains.cpp	2017-07-24 21:59:56.446060003 +0200
+++ clang-3.5/tools/clang/lib/Driver/ToolChains.cpp	2017-07-24 23:11:19.877905402 +0200
@@ -3484,14 +3484,14 @@
   const GCCVersion &Version = GCCInstallation.getVersion();
 
   // The primary search for libstdc++ supports multiarch variants.
-  if (addLibStdCXXIncludePaths(LibDir.str() + "/../include",
-                               "/c++/" + Version.Text, TripleStr, GCCMultiarchTriple,
-                               TargetMultiarchTriple,
-                               Multilib.includeSuffix(), DriverArgs, CC1Args))
-    return;
+  addLibStdCXXIncludePaths(LibDir.str() + "/../include",
+                           "/c++/" + Version.Text, TripleStr, GCCMultiarchTriple,
+                           TargetMultiarchTriple,
+                           Multilib.includeSuffix(), DriverArgs, CC1Args);
 
   // Otherwise, fall back on a bunch of options which don't use multiarch
   // layouts for simplicity.
+  std::string SysRoot = computeSysRoot();
   const std::string LibStdCXXIncludePathCandidates[] = {
     // Gentoo is weird and places its headers inside the GCC install, so if the
     // first attempt to find the headers fails, try these patterns.
@@ -3503,6 +3503,9 @@
     // Freescale SDK C++ headers are directly in <sysroot>/usr/include/c++,
     // without a subdirectory corresponding to the gcc version.
     LibDir.str() + "/../include/c++",
+    SysRoot + "/usr/" + TripleStr.str() + "/include/c++/" + Version.Text,
+    SysRoot + "/usr/include" + TripleStr.str() + "/c++/" + Version.Text,
+    SysRoot + "/usr/include/c++"
   };
 
   for (const auto &IncludePath : LibStdCXXIncludePathCandidates) {
